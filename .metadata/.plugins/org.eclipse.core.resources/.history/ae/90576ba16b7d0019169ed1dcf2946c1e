package com.ego.manage.service.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.alibaba.dubbo.config.annotation.Reference;
import com.ego.commons.pojo.EasyUIDataGrid;
import com.ego.commons.pojo.EgoResult;
import com.ego.commons.utils.JsonUtils;
import com.ego.dubbo.service.TbContentDubboService;
import com.ego.manage.service.TbContentService;
import com.ego.pojo.TbContent;
import com.ego.redis.dao.JedisDao;
@Service
public class TbContentServiceImpl implements TbContentService{
	@Reference
	private TbContentDubboService tbContentDubboServiceImpl;
	@Resource
	private JedisDao jedisDaoImpl;
	@Value("${redis.bigpic.key}")
	private String key;
	@Override
	public EasyUIDataGrid show(long cateId, int page, int rows) {
		return tbContentDubboServiceImpl.selContentByPage(cateId, page, rows);
	}
	@Override
	public EgoResult insert(TbContent content) {
		EgoResult egoResult = new EgoResult();
		Date date = new Date();
		content.setCreated(date);
		content.setUpdated(date);
		int index = tbContentDubboServiceImpl.insContent(content);
		
		
		if(index>0){
			egoResult.setStatus(200);
			
			//同步redis缓存
			if(jedisDaoImpl.exists(key)){
				String jedisResult = jedisDaoImpl.get(key);
				if(jedisResult!=null&&!"".equals(jedisResult)){
					List<HashMap> jsonList = JsonUtils.jsonToList(jedisResult, HashMap.class);
					HashMap<String, Object> map = new HashMap<String,Object>();
					map.put("srcB", content.getPic2());
					map.put("height", 240);
					map.put("alt", "加载失败");
					map.put("width", 670);
					map.put("src", content.getPic());
					map.put("widthB", 550);
					map.put("href", content.getUrl());
					if(jsonList.size()==6){
						jsonList.remove(5);
					}
					jsonList.add(0, map);
					jedisDaoImpl.set(key, JsonUtils.objectToJson(jsonList));
				}
			}
		}
		
		
		return egoResult;
	}
	@Override
	public EgoResult update(TbContent content) {
		EgoResult egoResult = new EgoResult();
		Date date = new Date();
		content.setUpdated(date);
		int index = tbContentDubboServiceImpl.updContentById(content);
		
		if(index>0){
			egoResult.setStatus(200);
			jedisDaoImpl.set(key, "");
		}
		return egoResult;
	}
	@Override
	public int delete(String ids) throws Exception {
		int index = tbContentDubboServiceImpl.delContentByIds(ids);
		if(index>0){
			jedisDaoImpl.set(key, JsonUtils.objectToJson(jsonList));
		}
		return index;
	}

}
